AWSTemplateFormatVersion: "2010-09-09"
Description: SQS queues for audit events
Transform: AWS::LanguageExtensions

Parameters:
  PermissionsBoundary:
    Type: String
    Default: ""
  Environment:
    Description: The target environment
    Type: String
    Default: dev
    AllowedValues: [dev, build, staging, integration, production]
    ConstraintDescription: must be dev, build, staging, integration or production
  SupportManualURL:
    Description: "Link to the CRI specific support manual"
    Type: String
    Default: 'https://govukverify.atlassian.net/wiki/spaces/OJ/pages/3303931965/CRI+specific+support'

Conditions:
  IsDevEnvironment: !Equals [!Ref Environment, dev]
  IsLocalDevEnvironment: !Equals [ !Ref Environment, localdev ]
  IsNotDevEnvironment: !Not [!Condition IsDevEnvironment]
  IsDevLikeEnvironment:
    !Or [ !Condition IsLocalDevEnvironment, !Condition IsDevEnvironment ]
  IsNotDevLikeEnvironment: !Not
    - !Condition IsDevLikeEnvironment
  UsePermissionsBoundary: !Not [!Equals [!Ref PermissionsBoundary, ""]]

Mappings:
  TxMARootMapping:
    Environment:
      build: "arn:aws:iam::178023842775:root"
      staging: "arn:aws:iam::178023842775:root"
      integration: "arn:aws:iam::729485541398:root"
      production: "arn:aws:iam::451773080033:root"

Resources:
  AuditEventQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: !If [IsDevEnvironment, "3600", "1209600"] # 1 hour in dev, 14 days otherwise
      VisibilityTimeout: !If [IsDevEnvironment, "30", "70"]
      KmsMasterKeyId: !Ref AuditEventQueueEncryptionKeyAlias
      ReceiveMessageWaitTimeSeconds: 20
      RedriveAllowPolicy:
        redrivePermission: denyAll
      RedrivePolicy: !If
        - IsDevEnvironment
        - !Ref AWS::NoValue
        - deadLetterTargetArn: !GetAtt AuditEventDeadLetterQueue.Arn
          maxReceiveCount: 10
      Tags:
        - Key: Service
          Value: ci/cd
        - Key: Source
          Value: govuk-one-login/ipv-cri-common-infrastructure/txma/template.yaml

  AuditEventQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Condition: IsNotDevEnvironment
    Properties:
      Queues: [!Ref AuditEventQueue]
      PolicyDocument:
        Statement:
          - Sid: "Allow read by TxMA account"
            Effect: Allow
            Principal:
              AWS: !FindInMap [TxMARootMapping, Environment, !Ref Environment]
            Action:
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
            Resource: !GetAtt AuditEventQueue.Arn
          - Sid: "Allow EventBridge to send TxMA events"
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sqs:SendMessage
            Resource: !GetAtt AuditEventQueue.Arn

  AuditEventDeadLetterQueue:
    Type: AWS::SQS::Queue
    Condition: IsNotDevEnvironment
    Properties:
      MessageRetentionPeriod: 1209600 # 14 days
      VisibilityTimeout: 70
      KmsMasterKeyId: !Ref AuditEventQueueEncryptionKeyAlias
      Tags:
        - Key: Service
          Value: ci/cd
        - Key: Source
          Value: govuk-one-login/ipv-cri-common-infrastructure/txma/template.yaml

  AuditEventDeadLetterQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Condition: IsNotDevEnvironment
    Properties:
      Queues: [!Ref AuditEventDeadLetterQueue]
      PolicyDocument:
        Statement:
          - Sid: "Allow EventBridge to send TxMA events"
            Effect: Allow
            Principal:
              Service: "events.amazonaws.com"
            Action:
              - "sqs:SendMessage"
            Resource: !GetAtt AuditEventDeadLetterQueue.Arn

  AuditEventQueueEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Symmetric key used to encrypt audit messages at rest in SQS
      EnableKeyRotation: true
      KeySpec: SYMMETRIC_DEFAULT
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: "Enable root access"
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - !If
            - IsDevEnvironment
            - !Ref AWS::NoValue
            - Sid: "Allow decryption of events by TXMA"
              Effect: Allow
              Principal:
                AWS: !FindInMap [TxMARootMapping, Environment, !Ref 'Environment']
              Action: kms:decrypt
              Resource: "*"
          - !If
            - IsDevEnvironment
            - !Ref AWS::NoValue
            - Sid: "Allow EventBridge to generate data key and decrypt"
              Effect: Allow
              Principal:
                Service: events.amazonaws.com
              Action:
                - kms:decrypt
                - kms:GenerateDataKey
              Resource: "*"
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-auditEventQueueEncryptionKey
        - Key: Service
          Value: ci/cd
        - Key: Source
          Value: govuk-one-login/ipv-cri-common-infrastructure/txma/template.yaml

  AuditEventQueueEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}/auditEventQueueEncryptionKey
      TargetKeyId: !Ref AuditEventQueueEncryptionKey

  AuditEventQueueConsumerRole:
    Type: AWS::IAM::Role
    Condition: IsNotDevEnvironment
    Properties:
      Description: >
        A role to use in the SQS queue and KMS key policies. To be overridden in envs other than dev and build with
        supplied TXMA roles when they exist.
      PermissionsBoundary: !If [UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AWSLambdaBasicExecutionRole
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-auditEventQueueConsumerRole
        - Key: Service
          Value: ci/cd
        - Key: Source
          Value: govuk-one-login/ipv-cri-common-infrastructure/txma/template.yaml

  AuditEventSQSOldMessagesAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsNotDevLikeEnvironment
    Properties:
      AlarmName: !Sub "${AWS::StackName}-AuditEventStayedOnQueueForMoreThan24HoursMessagesAlarm"
      AlarmDescription: !Sub "Triggers CloudWatch Alarm when a message has stayed on the queue for more than 24 Hours ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: [ ]
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Statistic: Maximum
      Dimensions:
        - Name: QueueName
          Value: !GetAtt AuditEventQueue.QueueName
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 86400
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  AuditEventDLQMessagesVisibleAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsNotDevLikeEnvironment
    Properties:
      AlarmName: !Sub "${AWS::StackName}-AuditEventDLQMessagesVisibleAlarm"
      AlarmDescription: !Sub "Triggers CloudWatch Alarm when message gets added to audit event DLQ. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: [ ]
      Metrics:
        - Expression: "max-min"
          Id: "e1"
          Label: "ChangeInAmountOfVisibleMessages"
          ReturnData: true
        - Id: "min"
          Label: "MessagesVisibleMin"
          MetricStat:
            Metric:
              Dimensions:
                - Name: QueueName
                  Value: !GetAtt AuditEventDeadLetterQueue.QueueName
              MetricName: ApproximateNumberOfMessagesVisible
              Namespace: AWS/SQS
            Period: 300 # evaluate maximum over period of 5 min
            Stat: Minimum
            Unit: Count
          ReturnData: false
        - Id: "max"
          Label: "MessagesVisibleMax"
          MetricStat:
            Metric:
              Dimensions:
                - Name: QueueName
                  Value: !GetAtt AuditEventDeadLetterQueue.QueueName
              MetricName: ApproximateNumberOfMessagesVisible
              Namespace: AWS/SQS
            Period: 300 # evaluate maximum over period of 5 min
            Stat: Maximum
            Unit: Count
          ReturnData: false
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

Outputs:
  AuditEventQueueName:
    Description: The name of the SQS audit event queue. Needed to give write permissions to lambdas
    Value: !GetAtt AuditEventQueue.QueueName
    Export:
      Name: !Sub ${AWS::StackName}-AuditEventQueueName

  AuditEventQueueNameToRemove:
    Description: The name of the SQS audit event queue. Needed to give write permissions to lambdas
    Value: !GetAtt AuditEventQueue.QueueName
    Export:
      Name: AuditEventQueueName

  AuditEventQueueUrl:
    Description: The URL of the SQS audit event queue. Needed to write messages to the queue
    Value: !Ref AuditEventQueue
    Export:
      Name: !Sub ${AWS::StackName}-AuditEventQueueUrl

  AuditEventQueueUrlToRemove:
    Description: The URL of the SQS audit event queue. Needed to write messages to the queue
    Value: !Ref AuditEventQueue
    Export:
      Name: AuditEventQueueUrl

  AuditEventQueueEncryptionKeyArn:
    Description: The ARN of the KMS key used to encrypt audit event messages in the SQS queue
    Value: !GetAtt AuditEventQueueEncryptionKey.Arn
    Export:
      Name: !Sub ${AWS::StackName}-AuditEventQueueEncryptionKeyArn

  AuditEventQueueEncryptionKeyArnToRemove:
    Description: The ARN of the KMS key used to encrypt audit event messages in the SQS queue
    Value: !GetAtt AuditEventQueueEncryptionKey.Arn
    Export:
      Name: AuditEventQueueEncryptionKeyArn

  AuditEventDLQArn:
    Condition: IsNotDevEnvironment
    Description: The ARN of the audit event SQS queue DLQ
    Value: !GetAtt AuditEventDeadLetterQueue.Arn
    Export:
      Name: !Sub ${AWS::StackName}-AuditEventDLQArn
