AWSTemplateFormatVersion: "2010-09-09"

Description: SQS queues for audit events

Parameters:
  CodeSigningConfigArn:
    Type: String
    Default: "none"
    Description: >
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
  Environment:
    Description: "The target environment"
    Type: "String"
    AllowedValues:
      - "dev"
      - "build"
      - "staging"
      - "integration"
      - "production"
    ConstraintDescription: must be dev, build, staging, integration or production
  PermissionsBoundary:
    Type: String

Mappings:
  TxMARootMapping:
    Environment:
      dev: "arn:aws:iam::178023842775:root"
      build: "arn:aws:iam::178023842775:root"
      staging: "arn:aws:iam::178023842775:root"
      integration: "arn:aws:iam::729485541398:root"
      production: "arn:aws:iam::451773080033:root"

Resources:
  AuditEventQueue:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !Ref AuditEventQueueEncryptionKeyAlias
      RedriveAllowPolicy:
        redrivePermission: denyAll
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt AuditEventDeadLetterQueue.Arn
        maxReceiveCount: 10
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - - !Ref AWS::StackName
              - "auditEventQueue"
        - Key: Service
          Value: "ci/cd"
        - Key: Source
          Value: "alphagov/di-ipv-cri-common-infrastructure/sqs/template.yaml"

  AuditEventQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref AuditEventQueue
      PolicyDocument:
        Statement:
          - Sid: "AllowReadByTXMAAccount"
            Effect: Allow
            Principal:
              AWS: !FindInMap [TxMARootMapping, Environment, !Ref 'Environment']
            Action:
              - "sqs:ReceiveMessage"
              - "sqs:DeleteMessage"
              - "sqs:GetQueueAttributes"
            Resource: !GetAtt AuditEventQueue.Arn

  AuditEventDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !Ref AuditEventQueueEncryptionKeyAlias
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - - !Ref AWS::StackName
              - "auditEventDeadLetterQueue"
        - Key: Service
          Value: "ci/cd"
        - Key: Source
          Value: "alphagov/di-ipv-cri-common-infrastructure/sqs/template.yaml"

  AuditEventQueueEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Symmetric key used to encrypt audit messages at rest in SQS
      EnableKeyRotation: true
      KeySpec: SYMMETRIC_DEFAULT
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: 'Enable Root access'
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - 'kms:*'
            Resource: '*'
          - Sid: 'Allow decryption of events by TXMA'
            Effect: Allow
            Principal:
              AWS: !FindInMap [TxMARootMapping, Environment, !Ref 'Environment']
            Action:
              - 'kms:decrypt'
            Resource: '*'
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - - !Ref AWS::StackName
              - "auditEventQueueEncryptionKey"
        - Key: Service
          Value: "ci/cd"
        - Key: Source
          Value: "alphagov/di-ipv-cri-common-infrastructure/sqs/template.yaml"

  AuditEventQueueEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}/auditEventQueueEncryptionKey
      TargetKeyId: !Ref AuditEventQueueEncryptionKey

  AuditEventQueueConsumerRole:
    Type: AWS::IAM::Role
    Properties:
      Description: >
        A role to use in the SQS queue and KMS key policies. To be overridden in envs other than dev and build with
        supplied TXMA roles when they exist.
      PermissionsBoundary: !Ref PermissionsBoundary
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: AWSLambdaBasicExecutionRole
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: '*'
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - - !Ref AWS::StackName
              - "auditEventQueueConsumerRole"
        - Key: Service
          Value: "ci/cd"
        - Key: Source
          Value: "alphagov/di-ipv-cri-common-infrastructure/sqs/template.yaml"

Outputs:
  AuditEventQueueName:
    Description: The name of the SQS audit event queue. Needed to give write permissions to lambdas
    Value: !GetAtt AuditEventQueue.QueueName
    Export:
      Name: !Sub ${AWS::StackName}-AuditEventQueueName

  AuditEventQueueNameToRemove:
    Description: The name of the SQS audit event queue. Needed to give write permissions to lambdas
    Value: !GetAtt AuditEventQueue.QueueName
    Export:
      Name: AuditEventQueueName

  AuditEventQueueUrl:
    Description: The URL of the SQS audit event queue. Needed to write messages to the queue
    Value: !Ref AuditEventQueue
    Export:
      Name: !Sub ${AWS::StackName}-AuditEventQueueUrl

  AuditEventQueueUrlToRemove:
    Description: The URL of the SQS audit event queue. Needed to write messages to the queue
    Value: !Ref AuditEventQueue
    Export:
      Name: AuditEventQueueUrl

  AuditEventQueueEncryptionKeyArn:
    Description: The ARN of the KMS key used to encrypt audit event messages in the SQS queue
    Value: !GetAtt AuditEventQueueEncryptionKey.Arn
    Export:
      Name: !Sub ${AWS::StackName}-AuditEventQueueEncryptionKeyArn

  AuditEventQueueEncryptionKeyArnToRemove:
    Description: The ARN of the KMS key used to encrypt audit event messages in the SQS queue
    Value: !GetAtt AuditEventQueueEncryptionKey.Arn
    Export:
      Name: AuditEventQueueEncryptionKeyArn
