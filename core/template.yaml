AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Digital Identity IPV CRI Core Infrastructure"

Parameters:
  Environment:
    Description: "The environment type"
    Type: "String"
    AllowedValues:
      - "dev"
      - "build"
      - "staging"
      - "integration"
      - "production"
    ConstraintDescription: must be dev, build, staging, integration or production

Resources:

  CriVcSigningKey1:
    Type: AWS::KMS::Key
    Properties:
      Description: Asymmetric key used by the CRI for signing verifiable credentials.
      Enabled: true
      KeySpec: ECC_NIST_P256
      KeyUsage: SIGN_VERIFY
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: 'Enable Root access'
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - 'kms:*'
            Resource: '*'
      Tags:
        - Key: "jwkset"
          Value: "true"
        - Key: "awsStackName"
          Value: !Sub "${AWS::StackName}"
        - Key: "CheckovRulesToSkip"
          Value: "CKV_AWS_7"

  CriDecryptionKey1:
    Type: AWS::KMS::Key
    Properties:
      Description: Asymmetric key used by the CRI to decrypt the Authorization JAR JWE
      Enabled: true
      KeySpec: RSA_2048
      KeyUsage: ENCRYPT_DECRYPT
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: 'Enable Root access'
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - 'kms:*'
            Resource: '*'
      Tags:
        - Key: "jwkset"
          Value: "true"
        - Key: "awsStackName"
          Value: !Sub "${AWS::StackName}"
        - Key: "CheckovRulesToSkip"
          Value: "CKV_AWS_7"

  SessionTable1:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: !Sub "${AWS::StackName}-session1"
      BillingMode: "PAY_PER_REQUEST"
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        KMSMasterKeyId: !Ref ResourceEncryptionKmsKey1
        SSEEnabled: true
        SSEType: "KMS"
      AttributeDefinitions:
        - AttributeName: "sessionId"
          AttributeType: "S"
        - AttributeName: "authorizationCode"
          AttributeType: "S"
        - AttributeName: "accessToken"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "sessionId"
          KeyType: "HASH"
      GlobalSecondaryIndexes:
        - IndexName: "authorizationCode-index"
          KeySchema:
            - AttributeName: "authorizationCode"
              KeyType: "HASH"
          Projection:
            NonKeyAttributes:
              - "sessionId"
              - "redirectUri"
              - "clientId"
            ProjectionType: "INCLUDE"
        - IndexName: "access-token-index"
          KeySchema:
            - AttributeName: "accessToken"
              KeyType: "HASH"
          Projection:
            NonKeyAttributes:
              - "sessionId"
              - "subject"
            ProjectionType: "INCLUDE"
      TimeToLiveSpecification:
        AttributeName: expiry-date
        Enabled: true

  ApiKey1:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Description: Api key 1
      Enabled: true

  ResourceEncryptionKmsKey1:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: 'kms:*'
            Resource: '*'
          - Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: "*"
            Condition:
              ArnLike:
                "kms:EncryptionContext:aws:logs:arn": !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"

  ApiKey2:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Description: Api key 2
      Enabled: true

Outputs:

  TableNameSession1:
    Description: "DynamoDB Session Table Name"
    Value: !Ref SessionTable1
    Export:
      Name: !Sub ${AWS::StackName}-TableNameSession1

  CriVcSigningKey1Id:
    Description: "CRI KMS Signing Key 1 Id"
    Value: !Ref CriVcSigningKey1
    Export:
      Name: !Sub ${AWS::StackName}-CriVcSigningKey1Id

  CriVcSigningKey1Arn:
    Description: "CRI KMS Signing Key 1 Arn"
    Value: !GetAtt CriVcSigningKey1.Arn
    Export:
      Name: !Sub ${AWS::StackName}-CriVcSigningKey1Arn

  CriDecryptionKey1Id:
    Description: "CRI KMS Decryption Key 1 Id"
    Value: !Ref CriDecryptionKey1
    Export:
      Name: !Sub ${AWS::StackName}-CriDecryptionKey1Id

  CriDecryptionKey1Arn:
    Description: "CRI KMS Decryption Key 1 Arn"
    Value: !GetAtt CriDecryptionKey1.Arn
    Export:
      Name: !Sub ${AWS::StackName}-CriDecryptionKey1Arn

  ResourceEncryptionKmsKey1Id:
    Description: "CRI KMS Decryption Key 1 Id"
    Value: !Ref ResourceEncryptionKmsKey1
    Export:
      Name: !Sub ${AWS::StackName}-ResourceEncryptionKmsKey1Id

  ResourceEncryptionKmsKey1Arn:
    Description: "CRI KMS Decryption Key 1 Arn"
    Value: !GetAtt ResourceEncryptionKmsKey1.Arn
    Export:
      Name: !Sub ${AWS::StackName}-ResourceEncryptionKmsKey1Arn

  ApiKey1:
    Description: "API key 1 for API Gateway"
    Value: !Ref ApiKey1
    Export:
      Name: !Sub ${AWS::StackName}-ApiKey1

  ApiKey2:
    Description: "API key 2 for API Gateway"
    Value: !Ref ApiKey2
    Export:
      Name: !Sub ${AWS::StackName}-ApiKey2
