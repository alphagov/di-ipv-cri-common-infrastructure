name: Package TxMA infrastructure to dev
on:
  push:
    branches:
      - main
    paths:
      - "txma/**"
  workflow_dispatch: # deploy manually

jobs:
  publish_txma_to_matrix_dev:
    strategy:
      matrix:
        target: [ ADDRESS_DEV, FRAUD_DEV, KBV_DEV ]
        include:
          - target: ADDRESS_DEV
            ARTIFACT_SOURCE_BUCKET_SECRET: ADDRESS_DEV_TXMA_ARTIFACT_SOURCE_BUCKET_NAME
            GH_ACTIONS_ROLE_ARN_SECRET: ADDRESS_DEV_TXMA_GH_ACTIONS_ROLE_ARN
          - target: FRAUD_DEV
            ARTIFACT_SOURCE_BUCKET_SECRET: FRAUD_DEV_TXMA_ARTIFACT_SOURCE_BUCKET_NAME
            GH_ACTIONS_ROLE_ARN_SECRET: FRAUD_DEV_TXMA_GH_ACTIONS_ROLE_ARN
          - target: KBV_DEV
            ARTIFACT_SOURCE_BUCKET_SECRET: KBV_DEV_TXMA_ARTIFACT_SOURCE_BUCKET_NAME
            GH_ACTIONS_ROLE_ARN_SECRET: KBV_DEV_TXMA_GH_ACTIONS_ROLE_ARN
      max-parallel: 2
    name: Publish TxMA infrastructure to dev
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      AWS_REGION: eu-west-2
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2

      - name: Setup SAM
        uses: aws-actions/setup-sam@v1

      - name: Assume temporary AWS role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets[matrix.GH_ACTIONS_ROLE_ARN_SECRET] }}
          aws-region: ${{ env.AWS_REGION }}

      - name: SAM Validate
        run: sam validate --region ${{ env.AWS_REGION }} -t txma/template.yaml

      - name: SAM build
        run: sam build -t txma/template.yaml

      - name: SAM package
        run: |
          sam package -t txma/template.yaml  \
            --s3-bucket ${{ secrets[matrix.ARTIFACT_SOURCE_BUCKET_SECRET] }} \
            --region ${{ env.AWS_REGION }} --output-template-file=cf-template.yaml

      - name: Zip the CloudFormation template
        run: zip template.zip cf-template.yaml

      - name: Upload zipped CloudFormation artifact to S3
        env:
          ARTIFACT_SOURCE_BUCKET_NAME: ${{ secrets[matrix.ARTIFACT_SOURCE_BUCKET_SECRET] }}
        run: aws s3 cp template.zip "s3://${{ env.ARTIFACT_SOURCE_BUCKET_NAME }}/template.zip"
